{"mappings":"YAGA,IAAMA,EAAOC,SAASC,cAAc,SA+BpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAvCPL,EAAKa,iBAAiB,UAAU,SAACC,GAC/BA,EAAEC,iBAEF,IAAMC,EAAQC,OAAOjB,EAAKK,MAAMa,OAC1BC,EAAOF,OAAOjB,EAAKmB,KAAKD,OACxBE,EAASH,OAAOjB,EAAKoB,OAAOF,OAMlC,GAAIF,EAAQ,GAAKG,EAAO,GAAgB,IAAXC,EAC3BC,QAAQC,IAAI,6BAEZ,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAAG,CAIpCpB,EAHiBoB,EAAI,EACAP,EAAQG,EAAOI,GAGjCC,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBgB,QAAQC,IAAI,uBAAwCI,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE3DsB,OAAM,SAAAF,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBgB,QAAQC,IAAI,sBAAqCI,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["\n// JS code of the work of the promise generator\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const delay = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  // check for negative values:\n  // if delay or step is less than 0, or amount = 0, then promises are not generated. \n  // Otherwise, the promise is generated according to the source code.\n\n  if (delay < 0 || step < 0 || amount === 0) {\n    console.log('Invalid input values');\n  } else {\n    for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n    const promiseDelay = delay + step * i;\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","console","log","i","then","param","concat","catch"],"version":3,"file":"03-promises.39e7117f.js.map"}